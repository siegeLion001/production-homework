<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lhh.modules.classcollection.dao.ClassCollectionDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lhh.modules.classcollection.entity.ClassCollectionEntity" id="classCollectionMap">
        <result property="collId" column="coll_id"/>
        <result property="topId" column="top_id"/>
        <result property="classId" column="class_id"/>
        <result property="authId" column="auth_id"/>
        <result property="authType" column="auth_type"/>
        <result property="collMark" column="coll_mark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.lhh.modules.classcollection.entity.ClassCollectionEntity">
		select * from class_collection where coll_id = #{value}
	</select>

	<select id="queryList" resultType="com.lhh.modules.classcollection.entity.ClassCollectionEntity">
		select * from class_collection
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by coll_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from class_collection 
	</select>
	 
	<insert id="save" parameterType="com.lhh.modules.classcollection.entity.ClassCollectionEntity" useGeneratedKeys="true" keyProperty="collId">
		insert into class_collection
		(
			`top_id`, 
			`class_id`, 
			`auth_id`, 
			`auth_type`,
			`coll_mark`,
			`create_time`
		)
		values
		(
			#{topId}, 
			#{classId}, 
			#{authId}, 
			#{authType},
			#{collMark},
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.lhh.modules.classcollection.entity.ClassCollectionEntity">
		update class_collection 
		<set>
			<if test="topId != null">`top_id` = #{topId}, </if>
			<if test="classId != null">`class_id` = #{classId}, </if>
			<if test="authId != null">`auth_id` = #{authId}, </if>
			<if test="authType != null">`auth_type` = #{authType}, </if>
			<if test="collMark != null">`coll_mark` = #{collMark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where coll_id = #{collId}
	</update>
	
	<delete id="delete">
		delete from class_collection where coll_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from class_collection where coll_id in 
		<foreach item="collId" collection="array" open="(" separator="," close=")">
			#{collId}
		</foreach>
	</delete>

</mapper>